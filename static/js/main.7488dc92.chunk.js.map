{"version":3,"sources":["hymnResult.jsx","App.js","reportWebVitals.js","index.js"],"names":["HymnResult","props","Card","style","marginTop","variant","CardContent","Typography","component","title","color","author","scripture","CardActions","display","justifyContent","Button","onClick","window","open","textLink","size","appTheme","createMuiTheme","palette","primary","main","secondary","App","useState","inputValue","setInputValue","hymnData","setHymnData","waitingResponse","setWaitingResponse","showError","setShowError","ThemeProvider","theme","Snackbar","anchorOrigin","vertical","horizontal","autoHideDuration","onClose","Alert","severity","flexDirection","textAlign","paddingLeft","paddingRight","paddingTop","alignItems","position","top","backgroundColor","zIndex","paddingBottom","fontSize","icon","faCross","TextField","value","onChange","e","String","target","width","id","label","fetch","then","response","json","data","catch","error","finally","padding","CircularProgress","Object","keys","length","map","hymnKey","originalLanguage","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7488dc92.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Card,\n  CardContent,\n  Typography,\n  CardActions,\n  Button } from '@material-ui/core';\n\nexport default function HymnResult (props) {\n  const lyricsOnClick = () => {\n    window.open(props.textLink)\n  }\n  return (\n    <Card style={{ marginTop: '15px' }} variant='outlined'>\n      <CardContent>\n      <Typography variant=\"h5\" component=\"h2\">\n        {props.title}\n      </Typography>\n      <Typography color=\"textSecondary\">\n        {props.author}\n      </Typography>\n      <Typography variant=\"body2\" component=\"p\">\n        {props.scripture}\n      </Typography>\n      </CardContent>\n      <CardActions style={{display: 'flex', justifyContent: 'center'  }}>\n        <Button onClick={lyricsOnClick} size=\"small\" color=\"primary\">\n          Lyrics\n        </Button>\n      </CardActions>\n    </Card>\n  )\n}\n\nHymnResult.propTypes = {\n  title: PropTypes.string,\n  originalLanguage: PropTypes.string,\n  scripture: PropTypes.string,\n  author: PropTypes.string,\n  textLink: PropTypes.string,\n}","import './App.css';\nimport {\n  TextField,\n  Button,\n  CircularProgress,\n  Typography,\n  createMuiTheme,\n  ThemeProvider,\n  Snackbar\n} from '@material-ui/core';\nimport Alert from '@material-ui/lab/Alert';\nimport { useState } from 'react';\nimport HymnResult from './hymnResult.jsx';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCross } from '@fortawesome/free-solid-svg-icons'\n\nconst appTheme = createMuiTheme({\n  palette: {\n    primary: {\n      main: '#EB4B64',\n    },\n    secondary: {\n      main: '#F7BBD0',\n    },\n  }\n})\n\nfunction App() {\n  const [inputValue, setInputValue] = useState('');\n  const [hymnData, setHymnData] = useState();\n  const [waitingResponse, setWaitingResponse] = useState(false);\n  const [showError, setShowError] = useState(false);\n  const pageStyle = {\n    display: 'flex',\n    flexDirection: 'column',\n    textAlign: 'center',\n    justifyContent: 'center',\n    paddingLeft: '5%',\n    paddingRight: '5%',\n    paddingTop: '20vh',\n  }\n  const boxWrapperStyle = {\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n    position: 'sticky',\n    top: 0,\n    backgroundColor: '#FFFFFF',\n    zIndex: '1',\n    paddingBottom: '20px',\n    paddingTop: '20px'\n  }\n  const onSearch = () => {\n    setWaitingResponse(true);\n    // Fetch data\n    fetch(`https://hymnary.org/api/scripture?reference=${inputValue}`)\n      .then(response => {\n        return response.json()\n      })\n      .then(data => {\n        setHymnData(data);\n      })\n      .catch((error) => {\n        setShowError(true);\n      })\n      .finally(() => setWaitingResponse(false))\n  }\n  /**\n   * Renders the hymn data\n   */\n  const renderHymnData = () => {\n    // Return nothing if there is no data\n    if (!hymnData || Object.keys(hymnData).length === 0) {\n      return (null);\n    }\n    // Render\n    return Object.keys(hymnData).map((hymnKey) => {\n        const data = hymnData[hymnKey];\n        return <HymnResult\n          key={hymnKey}\n          title={hymnKey}\n          originalLanguage={data['original language']}\n          scripture={data['scripture references']}\n          author={data.author}\n          textLink={data['text link']}\n        />\n      }\n    )\n  }\n  const renderWaiting = () => {\n    if (waitingResponse) {\n      return (\n      <div style={{ display: 'flex',\n        justifyContent: 'center',\n        padding: '20px' }}>\n        <CircularProgress/>\n      </div>\n      )\n    }\n    return (null)\n  }\n  return (\n    <ThemeProvider theme={appTheme}>\n      <Snackbar anchorOrigin={{vertical: 'top', horizontal: 'center'}} open={showError} autoHideDuration={6000} onClose={() => {setShowError(false)}}>\n        <Alert severity='error'>Could not find the given bible verse</Alert>\n      </Snackbar>\n      <div style={pageStyle}>\n        <div style={boxWrapperStyle}>\n          <Typography style={{ fontSize: '5vh' }} variant=\"h2\" component=\"h2\">\n            <FontAwesomeIcon icon={faCross}/>  Hymn Finder\n          </Typography>\n          <Typography color=\"textSecondary\">\n            By Ashley Cheung\n          </Typography>\n          <TextField\n            value={inputValue}\n            onChange={(e) => {setInputValue(String(e.target.value))}}\n            style={{ width: '100%' }}\n            id='standard-basic'\n            label='Bible Verse'/>\n          <Button onClick={onSearch} style={{ marginTop: '50px' }} color='primary'  variant='contained'>Search Hymn</Button>\n        </div>\n        { renderWaiting() }\n        { renderHymnData() }\n      </div>\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}